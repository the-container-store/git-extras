#!/bin/bash

#   TODO
#
#   * Extract functions for readability
#
#   * Better preconditions. need to validate
#     1. Existance of Pivotal and GitHub environment variables
#     2. Format of branch name
#
#   * Better error handling for failed pulled requests. Should 
#     probably parse the JSON error response and translate into
#     a user-friendly message.
#
#   * Maybe look at making the '-f' option on the push command 
#     optional


CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
git push -f origin $CURRENT_BRANCH

STORY_ID=$(echo $CURRENT_BRANCH | cut -d "/" -f 2)
STORY_JSON=$(curl -s -H "X-TrackerToken:$PIVOTAL_TOKEN" \
                  https://www.pivotaltracker.com/services/v5/stories/$STORY_ID)

TRACKING_BRANCH=$(git branch -vv | \
                  grep "*" | \
                  sed 's/^.*\[//' | \
                  sed 's/\].*$//' | \
                  sed 's/:.*$//')

REPO=$(git remote -v | \
       grep push | \
       cut -f 2 | \
       cut -d " " -f 1 | \
       sed 's/^.*\://' | \
       sed 's/\.git$//')

PR_URL="https://api.github.com/repos/$REPO/pulls"

echo $STORY_JSON
# payload = { 'title' => "[##{story_id}] #{story['name']}",
#             'body' => story['description'],
#             'head' => "the-container-store:#{current_branch}",
#             'base' => "the-container-store:#{tracking_branch}"}.to_json

#   pull_request_json = RestClient.post pr_url, payload, 'Authorization' => "token #{github_token}"
#   pull_request = JSON(pull_request_json)
#   `open #{pull_request['html_url']}` # this will only work on Mac for now

# git checkout $TRACKING_BRANCH
